[{"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js":"1","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js":"2","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js":"3","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js":"4","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js":"5","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js":"6","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js":"7","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js":"8","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js":"9"},{"size":1605,"mtime":1607755934642,"results":"10","hashOfConfig":"11"},{"size":352,"mtime":1607151243473,"results":"12","hashOfConfig":"11"},{"size":1637,"mtime":1607390417215,"results":"13","hashOfConfig":"11"},{"size":1947,"mtime":1607756699754,"results":"14","hashOfConfig":"11"},{"size":534,"mtime":1607305023461,"results":"15","hashOfConfig":"11"},{"size":3921,"mtime":1607394913890,"results":"16","hashOfConfig":"11"},{"size":1304,"mtime":1607394801817,"results":"17","hashOfConfig":"11"},{"size":7416,"mtime":1607395095156,"results":"18","hashOfConfig":"11"},{"size":7283,"mtime":1607395297249,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k2yj51",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js",["40"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js",["41"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js",["42","43","44","45"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js",["46"],"import React, { useState } from \"react\";\r\nimport data from \"./data.json\";\r\nimport MedicationList from \"./components/MedicationList\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nconst Dashboard = () => {\r\n  const [values, setValues] = useState({ data });\r\n\r\n  const userData = values.data;\r\n  const medication = userData.medication;\r\n  console.log(medication);\r\n\r\n  return (\r\n    <>\r\n      <Navigation user_data={userData} />\r\n      <MedicationList medication={medication} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js",["47"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js",["48"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst AddMed = (props) => {\r\n  Modal.setAppElement();\r\n\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    name: String,\r\n    dosage_size: Number,\r\n    dosage_unit: String,\r\n    dosage: Number,\r\n    type: String,\r\n    duration: Number,\r\n    duration_unit: \"day\",\r\n    morning: Boolean,\r\n    afternoon: Boolean,\r\n    evening: Boolean,\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const afterOpenModal = () => {\r\n    // references are now sync'd and can be accessed.\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Handlers\r\n  const handleMedicationInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      name: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageSizeInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_size: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageUnitInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_unit: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleDurationInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      duration: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleMorningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      morning: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAfternonCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      afternoon: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleEveningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      evening: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSubmitted(true);\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"nav--button input--button\"\r\n        id=\"modal-button\"\r\n        onClick={openModal}\r\n      >\r\n        <FontAwesomeIcon icon={faPen} className=\"icon pen \" />\r\n        <h3 className=\"nav--words\">Add!</h3>\r\n      </button>\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        className=\"modal--wrapper\"\r\n        overlayClassName=\"modal--overlay\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <header className=\"modal--header\">\r\n          <h2>Add a Med</h2>\r\n        </header>\r\n        <form onSubmit={handleSubmit}>\r\n          <section>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"medication-name\"\r\n                  onChange={handleMedicationInputChange}\r\n                  value={values.name}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication type</label>\r\n                <select id=\"medicationType\" name=\"type\" onChange={``} required>\r\n                  <option value=\"pill\">Pill</option>\r\n                  <option value=\"caplet\">Caplet</option>\r\n                  <option value=\"tablet\">Tablet</option>\r\n                  <option value=\"shot\">Shot</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Times per day?</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosage\"\r\n                  onChange={handleDosageInputChange}\r\n                  value={values.dosage}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Days till next refill?</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosage\"\r\n                  onChange={handleDurationInputChange}\r\n                  value={values.duration}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Dosage</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosageAmount\"\r\n                  onChange={handleDosageSizeInputChange}\r\n                  value={values.dosage_size}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"dosageStrength\">Dosage Strength</label>\r\n                <select\r\n                  id=\"dosageStrength\"\r\n                  name=\"dosageStrength\"\r\n                  onChange={handleDosageUnitInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"mg\">milligram(mg)</option>\r\n                  <option value=\"g\">gram(g)</option>\r\n                  <option value=\"kg\">kilogram(kg)</option>\r\n                  <option value=\"mcg\">microgram(mcg)</option>\r\n                  <option value=\"L\">liter(L)</option>\r\n                  <option value=\"ml\">millilitre(ml)</option>\r\n                  <option value=\"cc\">cubic centimeter(cc)</option>\r\n                  <option value=\"m\">mole(mol)</option>\r\n                  <option value=\"mmol\">millimole(mmol)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <section className=\"modal--inline\">\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Morning</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleMorningCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Afternoon</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleAfternonCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Evening</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleEveningCheckChange}\r\n                  value={``}\r\n                ></input>\r\n              </div>\r\n            </section>\r\n          </section>\r\n\r\n          <div class=\"modal--footer\">\r\n            <button type=\"submit\" className=\"save-button\">\r\n              Save changes\r\n            </button>\r\n            <button className=\"close-button\" onClick={closeModal}>\r\n              close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default AddMed;\r\n",{"ruleId":"49","severity":1,"message":"50","line":11,"column":27,"nodeType":"51","messageId":"52","endLine":11,"endColumn":45},{"ruleId":"49","severity":1,"message":"53","line":11,"column":10,"nodeType":"51","messageId":"52","endLine":11,"endColumn":19},{"ruleId":"49","severity":1,"message":"54","line":14,"column":11,"nodeType":"51","messageId":"52","endLine":14,"endColumn":16},{"ruleId":"49","severity":1,"message":"55","line":14,"column":18,"nodeType":"51","messageId":"52","endLine":14,"endColumn":26},{"ruleId":"49","severity":1,"message":"56","line":14,"column":28,"nodeType":"51","messageId":"52","endLine":14,"endColumn":36},{"ruleId":"49","severity":1,"message":"53","line":16,"column":10,"nodeType":"51","messageId":"52","endLine":16,"endColumn":19},{"ruleId":"49","severity":1,"message":"57","line":7,"column":18,"nodeType":"51","messageId":"52","endLine":7,"endColumn":27},{"ruleId":"49","severity":1,"message":"53","line":27,"column":10,"nodeType":"51","messageId":"52","endLine":27,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":24,"column":10,"nodeType":"51","messageId":"52","endLine":24,"endColumn":19},"no-unused-vars","'setIsAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'submitted' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'username' is assigned a value but never used.","'setValues' is assigned a value but never used."]