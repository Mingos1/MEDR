[{"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js":"1","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js":"2","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js":"3","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js":"4","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js":"5","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js":"6","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js":"7","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js":"8","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js":"9","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\index.js":"10","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\EditMed.js":"11","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\AddMed.js":"12","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\login\\login.js":"13","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationList.js":"14","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\SectionTitle.js":"15","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationBoxMenu.js":"16","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationBox.js":"17","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Page.stories.js":"18","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Header.js":"19","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Page.js":"20"},{"size":2356,"mtime":1608092148474,"results":"21","hashOfConfig":"22"},{"size":1397,"mtime":1608094424985,"results":"23","hashOfConfig":"22"},{"size":2288,"mtime":1608251309874,"results":"24","hashOfConfig":"22"},{"size":2614,"mtime":1608095108945,"results":"25","hashOfConfig":"22"},{"size":2836,"mtime":1608532404775,"results":"26","hashOfConfig":"22"},{"size":4142,"mtime":1608441026943,"results":"27","hashOfConfig":"22"},{"size":1304,"mtime":1607394801817,"results":"28","hashOfConfig":"22"},{"size":7416,"mtime":1607395095156,"results":"29","hashOfConfig":"22"},{"size":8447,"mtime":1608544240325,"results":"30","hashOfConfig":"22"},{"size":2463,"mtime":1611174660985,"results":"31","hashOfConfig":"32"},{"size":7220,"mtime":1611606746543,"results":"33","hashOfConfig":"32"},{"size":8129,"mtime":1611605676249,"results":"34","hashOfConfig":"32"},{"size":2288,"mtime":1610884261666,"results":"35","hashOfConfig":"32"},{"size":2202,"mtime":1611174384461,"results":"36","hashOfConfig":"32"},{"size":289,"mtime":1611174695944,"results":"37","hashOfConfig":"32"},{"size":815,"mtime":1611606494987,"results":"38","hashOfConfig":"32"},{"size":1822,"mtime":1611606582807,"results":"39","hashOfConfig":"32"},{"size":424,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":1463,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2530,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1k2yj51",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"ea5hve",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ugluyy",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js",[],["89","90"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js",["91","92","93"],"import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Button,\r\n  Header,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  // Hooks\r\n  const [values, setValues] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const { email, password } = values;\r\n\r\n  // Handlers\r\n\r\n  const onChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setSubmitted(true);\r\n    const body = { email, password };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n      console.log(body);\r\n\r\n      if (parseRes.token !== undefined) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n      }\r\n\r\n      //setAuth(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form--wrapper login\" onSubmit={handleSubmit}>\r\n        <header>\r\n          <h2>Login</h2>\r\n        </header>\r\n\r\n        <FormControl id=\"email\">\r\n          <FormLabel for=\"email\">Email</FormLabel>\r\n          <Input\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            onChange={onChange}\r\n            value={email}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel for=\"password\">Password</FormLabel>\r\n          <Input\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onChange}\r\n            value={password}\r\n          />\r\n        </FormControl>\r\n        <div className=\"form-field--wrapper\">\r\n          <Button mt={4} colorScheme=\"pink\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js",["94","95"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js",["96"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js",["97"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst EditMed = (props) => {\r\n  // console.log(props.medication);\r\n  const medication = props.medication;\r\n  Modal.setAppElement();\r\n\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    name: String,\r\n    dosage_size: Number,\r\n    dosage_unit: String,\r\n    dosage: Number,\r\n    type: String,\r\n    taken: Boolean,\r\n    duration: Number,\r\n    duration_unit: String,\r\n    morning: Boolean,\r\n    afternoon: Boolean,\r\n    evening: Boolean,\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const afterOpenModal = () => {\r\n    // references are now sync'd and can be accessed.\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Handlers\r\n  const handleMedicationInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      name: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageSizeInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_size: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageUnitInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_unit: event.target.value,\r\n    }));\r\n  };\r\n\r\n  // const handleDurationInputChange = (event) => {\r\n  //   event.persist();\r\n  //   setValues((values) => ({\r\n  //     ...values,\r\n  //     duration: event.target.value,\r\n  //   }));\r\n  // };\r\n\r\n  const handleMorningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      morning: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAfternonCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      afternoon: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleEveningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      evening: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSubmitted(true);\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"edit-button\" id=\"modal-button\" onClick={openModal}>\r\n        <FontAwesomeIcon icon={faEllipsisV} />\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        className=\"modal--wrapper\"\r\n        overlayClassName=\"modal--overlay\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <header className=\"modal--header\">\r\n          <h2>Edit your med</h2>\r\n        </header>\r\n        <form onSubmit={handleSubmit}>\r\n          <section>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"medication-name\"\r\n                  placeholder={medication.name}\r\n                  onChange={handleMedicationInputChange}\r\n                  value={values.name}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication type</label>\r\n                <select\r\n                  id=\"medicationType\"\r\n                  name=\"type\"\r\n                  defaultValue={medication.type}\r\n                  onChange={``}\r\n                >\r\n                  <option value=\"pill\">Pill</option>\r\n                  <option value=\"caplet\">Caplet</option>\r\n                  <option value=\"tablet\">Tablet</option>\r\n                  <option value=\"shot\">Shot</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Times per day?</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosage\"\r\n                  placeholder={medication.dosage}\r\n                  onChange={handleDosageInputChange}\r\n                  value={values.dosage}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Dosage</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosageAmount\"\r\n                  onChange={handleDosageSizeInputChange}\r\n                  placeholder={medication.dosage_size}\r\n                  value={values.dosage_size}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"dosageStrength\">Dosage Strength</label>\r\n                <select\r\n                  id=\"dosageStrength\"\r\n                  name=\"dosageStrength\"\r\n                  onChange={handleDosageUnitInputChange}\r\n                  defaultValue={medication.dosage_unit}\r\n                >\r\n                  <option value=\"mg\">milligram(mg)</option>\r\n                  <option value=\"g\">gram(g)</option>\r\n                  <option value=\"kg\">kilogram(kg)</option>\r\n                  <option value=\"mcg\">microgram(mcg)</option>\r\n                  <option value=\"L\">liter(L)</option>\r\n                  <option value=\"ml\">millilitre(ml)</option>\r\n                  <option value=\"cc\">cubic centimeter(cc)</option>\r\n                  <option value=\"m\">mole(mol)</option>\r\n                  <option value=\"mmol\">millimole(mmol)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <section className=\"modal--inline\">\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Morning</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={medication.morning ? true : false}\r\n                  onChange={handleMorningCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Afternoon</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={medication.afternoon ? true : false}\r\n                  onChange={handleAfternonCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Evening</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleEveningCheckChange}\r\n                  defaultChecked={medication.evening ? true : false}\r\n                  value={``}\r\n                ></input>\r\n              </div>\r\n            </section>\r\n          </section>\r\n\r\n          <div class=\"modal--footer\">\r\n            <button type=\"submit\" className=\"save-button\">\r\n              Save changes\r\n            </button>\r\n            <button className=\"close-button\" onClick={closeModal}>\r\n              close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditMed;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js",["98"],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\index.js",[],["99","100"],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\EditMed.js",["101"],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\AddMed.js",["102"],"import React, { useState } from \"react\";\r\nimport {\r\n  useDisclosure,\r\n  Select,\r\n  Button,\r\n  Modal,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  NumberInputField,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInputStepper,\r\n  NumberInput,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function AddMed(props) {\r\n\r\n  let user_id = props.user_id;\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    med_id: Date.now(),\r\n    name: \"\",\r\n    dosage_size: 0,\r\n    dosage_unit: \"\",\r\n    dosage: 0,\r\n    medication_type: \"\",\r\n    duration: 0,\r\n    taken: false,\r\n    duration_unit: \"day\",\r\n    morning: false,\r\n    afternoon: false,\r\n    evening: false,\r\n  });\r\n\r\n  let {\r\n    med_id,\r\n    name,\r\n    taken,\r\n    dosage_size,\r\n    dosage_unit,\r\n    dosage,\r\n    medication_type,\r\n    duration,\r\n    duration_unit,\r\n    morning,\r\n    afternoon,\r\n    evening,\r\n  } = values;\r\n\r\n  const handleChange = (e) => {\r\n    const { target } = e;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const { name } = target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setSubmitted(true);\r\n\r\n    console.log(values);\r\n\r\n    const body = {\r\n      med_id,\r\n      user_id,\r\n      name,\r\n      taken,\r\n      dosage_size,\r\n      dosage_unit,\r\n      dosage,\r\n      medication_type,\r\n      duration,\r\n      duration_unit,\r\n      morning,\r\n      afternoon,\r\n      evening,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/dashboard/medication\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n      console.log(body);\r\n\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Button backgroundColor=\"salmon\" onClick={onOpen}>\r\n        Add\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} zIndices=\"\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Add a New Medication</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form onSubmit={handleSubmit}>\r\n            <ModalBody p={10} m={2}>\r\n              <FormControl>\r\n                <FormLabel>Medication Name</FormLabel>\r\n                <Input\r\n                  onChange={handleChange}\r\n                  defaultValue={name}\r\n                  name=\"name\"\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl mb={3}>\r\n                <FormLabel>Medication Type</FormLabel>\r\n                <Select\r\n                  name=\"medication_type\"\r\n                  placeholder=\"Select type\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"pill\">Pill</option>\r\n                  <option value=\"caplet\">Caplet</option>\r\n                  <option value=\"tablet\">Tablet</option>\r\n                  <option value=\"shot\">Shot</option>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl>\r\n                <FormLabel>How many should you take per day?</FormLabel>\r\n                <NumberInput\r\n                  min={0}\r\n                  onChange={(e) => {\r\n                    setValues({\r\n                      ...values,\r\n                      dosage: e,\r\n                    });\r\n                  }}\r\n                  defaultValue={dosage}\r\n                  name=\"dosage\"\r\n                >\r\n                  <NumberInputField />\r\n                  <NumberInputStepper>\r\n                    <NumberIncrementStepper />\r\n                    <NumberDecrementStepper />\r\n                  </NumberInputStepper>\r\n                </NumberInput>\r\n              </FormControl>\r\n\r\n              <FormControl>\r\n                <FormLabel>Dosage Size</FormLabel>\r\n                <NumberInput\r\n                  min={0}\r\n                  onChange={(e) => {\r\n                    setValues({\r\n                      ...values,\r\n                      dosage_size: e,\r\n                    });\r\n                  }}\r\n                  defaultValue={dosage_size}\r\n                  name=\"dosage_size\"\r\n                >\r\n                  <NumberInputField />\r\n                  <NumberInputStepper>\r\n                    <NumberIncrementStepper />\r\n                    <NumberDecrementStepper />\r\n                  </NumberInputStepper>\r\n                </NumberInput>\r\n              </FormControl>\r\n\r\n              <FormControl mb={3}>\r\n                <FormLabel>Dosage Unit</FormLabel>\r\n                <Select\r\n                  name=\"dosage_unit\"\r\n                  placeholder=\"Select unit\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"mg\">milligram(mg)</option>\r\n                  <option value=\"g\">gram(g)</option>\r\n                  <option value=\"kg\">kilogram(kg)</option>\r\n                  <option value=\"mcg\">microgram(mcg)</option>\r\n                  <option value=\"L\">liter(L)</option>\r\n                  <option value=\"ml\">millilitre(ml)</option>\r\n                  <option value=\"cc\">cubic centimeter(cc)</option>\r\n                  <option value=\"m\">mole(mol)</option>\r\n                  <option value=\"mmol\">millimole(mmol)</option>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl>\r\n                <FormLabel>How many days should you take it?</FormLabel>\r\n                <NumberInput\r\n                  min={0}\r\n                  defaultValue={duration}\r\n                  onChange={(e) => {\r\n                    setValues({\r\n                      ...values,\r\n                      duration: e,\r\n                    });\r\n                  }}\r\n                  name=\"duration\"\r\n                >\r\n                  <NumberInputField />\r\n                  <NumberInputStepper>\r\n                    <NumberIncrementStepper />\r\n                    <NumberDecrementStepper />\r\n                  </NumberInputStepper>\r\n                </NumberInput>\r\n              </FormControl>\r\n\r\n              <FormControl>\r\n                <FormLabel>When do you take it?</FormLabel>\r\n              </FormControl>\r\n\r\n              <FormControl mb={3}>\r\n                <FormLabel>Morning?</FormLabel>\r\n                <Select\r\n                  name=\"morning\"\r\n                  placeholder=\"Select an option\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value={true}>Yes</option>\r\n                  <option value={false}>No</option>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl mb={3}>\r\n                <FormLabel>Afternoon?</FormLabel>\r\n                <Select\r\n                  name=\"afternoon\"\r\n                  placeholder=\"Select an option\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value={true}>Yes</option>\r\n                  <option value={false}>No</option>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl mb={3}>\r\n                <FormLabel>Evening?</FormLabel>\r\n                <Select\r\n                  name=\"evening\"\r\n                  placeholder=\"Select an option\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value={true}>Yes</option>\r\n                  <option value={false}>No</option>\r\n                </Select>\r\n              </FormControl>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button colorScheme=\"blue\" mr={3} type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button onClick={onClose}>Cancel</Button>\r\n            </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\login\\login.js",["103","104","105"],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationList.js",[],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\SectionTitle.js",[],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationBoxMenu.js",["106","107","108","109","110","111"],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\routes\\main\\components\\MedicationBox.js",[],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Page.stories.js",[],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Header.js",[],"C:\\Users\\mingo\\Documents\\coding\\MEDR\\client\\src\\stories\\Page.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"120","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":17},{"ruleId":"116","severity":1,"message":"121","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":9},{"ruleId":"116","severity":1,"message":"117","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"120","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"122","line":90,"column":27},{"ruleId":"116","severity":1,"message":"123","line":27,"column":10,"nodeType":"118","messageId":"119","endLine":27,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":29,"column":10,"nodeType":"118","messageId":"119","endLine":29,"endColumn":19},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","replacedBy":"125"},{"ruleId":"116","severity":1,"message":"123","line":27,"column":10,"nodeType":"118","messageId":"119","endLine":27,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":28,"column":10,"nodeType":"118","messageId":"119","endLine":28,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"120","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":17},{"ruleId":"116","severity":1,"message":"121","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":9},{"ruleId":"116","severity":1,"message":"126","line":7,"column":5,"nodeType":"118","messageId":"119","endLine":7,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":8,"column":5,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":9,"column":5,"nodeType":"118","messageId":"119","endLine":9,"endColumn":20},{"ruleId":"116","severity":1,"message":"129","line":10,"column":5,"nodeType":"118","messageId":"119","endLine":10,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":11,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":16},{"ruleId":"116","severity":1,"message":"131","line":12,"column":5,"nodeType":"118","messageId":"119","endLine":12,"endColumn":16},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'FormErrorMessage' is defined but never used.","Identifier","unusedVar","'FormHelperText' is defined but never used.","'Header' is defined but never used.","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  88 |         </Flex>\n  89 |         <Box margin={2}>\n> 90 |           <AddMed user_id={} />\n     |                           ^\n  91 |         </Box>\n  92 |         <Flex align=\"flex-end\" justifyContent=\"space-around\">\n  93 |           <Box margin={2}>","'submitted' is assigned a value but never used.",["132"],["133"],"'MenuItemOption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.","'MenuDivider' is defined but never used.","no-global-assign","no-unsafe-negation"]