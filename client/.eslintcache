[{"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js":"1","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js":"2","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js":"3","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js":"4","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js":"5","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js":"6","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js":"7","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js":"8"},{"size":834,"mtime":1607298693906,"results":"9","hashOfConfig":"10"},{"size":352,"mtime":1607151243473,"results":"11","hashOfConfig":"10"},{"size":1637,"mtime":1607390417215,"results":"12","hashOfConfig":"10"},{"size":2350,"mtime":1607287273015,"results":"13","hashOfConfig":"10"},{"size":534,"mtime":1607305023461,"results":"14","hashOfConfig":"10"},{"size":3925,"mtime":1607388803895,"results":"15","hashOfConfig":"10"},{"size":1257,"mtime":1607393397586,"results":"16","hashOfConfig":"10"},{"size":7395,"mtime":1607393385595,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1k2yj51",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js",[],["38","39"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js",["40"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js",["41"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n// import { Formik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n\r\nconst Register = () => {\r\n  // Hooks\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Handlers\r\n  const handleUsernameInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      username: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handlePaswordInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      password: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleEmailInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      email: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h2>Register</h2>\r\n      </header>\r\n      <form className=\"form--wrapper register\" onSubmit={handleSubmit}>\r\n        <section>\r\n          <div className=\"form-field--wrapper\">\r\n            <label for=\"\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={handleUsernameInputChange}\r\n              value={values.username}\r\n            />\r\n          </div>\r\n          <div className=\"form-field--wrapper\">\r\n            <label for=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={handlePaswordInputChange}\r\n              value={values.password}\r\n            />\r\n          </div>\r\n          <div className=\"form-field--wrapper\">\r\n            <label for=\"\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={handleEmailInputChange}\r\n              value={values.email}\r\n            />\r\n          </div>\r\n          <div className=\"form-field--wrapper\">\r\n            <button type=\"submit\">Register</button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js",["42"],"import React, { useState } from \"react\";\r\nimport data from \"./data.json\";\r\nimport MedicationList from \"./components/MedicationList\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nconst Dashboard = () => {\r\n  const [values, setValues] = useState({ data });\r\n\r\n  const userData = values.data;\r\n  const medication = userData.medication;\r\n  console.log(medication);\r\n\r\n  return (\r\n    <>\r\n      <Navigation user_data={userData} />\r\n      <MedicationList medication={medication} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js",["43"],"import React, { useState } from \"react\";\r\nimport \"./MedicationList.css\";\r\nimport sun from \"./images/sun.png\";\r\nimport sunrise from \"./images/sunrise.png\";\r\nimport night from \"./images/night.png\";\r\nimport EditMed from \"./EditMed\";\r\n\r\nfunction SectionTitle() {\r\n  return (\r\n    <>\r\n      <header className=\"title\">\r\n        <h2>\r\n          {` \r\n          Glad you're here! Here's your schedule for ${new Date().toLocaleDateString()}.`}\r\n        </h2>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MedicationBox = (props) => {\r\n  return props.list.map((item) => {\r\n    return (\r\n      <li\r\n        key={item.id}\r\n        className=\"li--wrapper\"\r\n        id={`${item.taken === true ? \"box--taken\" : \"box--not-taken\"}`}\r\n      >\r\n        <div className=\"li--container\">\r\n          <div className=\"li--item\">\r\n            <h5 className=\"labels\">Medication Name</h5>\r\n            <h3>{`${item.name} ${item.dosage_size} ${item.dosage_unit}`}</h3>\r\n          </div>\r\n          <div classname=\"li--item\">\r\n            <EditMed medication={item} />\r\n          </div>\r\n        </div>\r\n        <article className=\"li--container\">\r\n          <div className=\"li--item\">\r\n            <h5 className=\"labels\">Amount</h5>\r\n            <h4>{`${item.dosage} ${\r\n              item.dosage > 1 ? item.type + \"s\" : item.type\r\n            }`}</h4>\r\n          </div>\r\n          <div className=\"li--item\">\r\n            <h5 className=\"labels\">Course Duration</h5>\r\n            <h4>{`${item.duration} ${\r\n              item.duration > 1 || item.duration === 0\r\n                ? item.duration_unit + \"s\"\r\n                : item.duration_unit\r\n            } left ${item.duration === 0 ? \"Refill needed!\" : \"\"}`}</h4>\r\n          </div>\r\n          <div classname=\"li--item\">\r\n            <button\r\n              className=\"taken-button\"\r\n              id={`${item.taken === true ? \"taken\" : \"not-taken\"}`}\r\n              onClick={`Set taken server call`}\r\n            >{`${item.taken === true ? \"Taken\" : \"Not taken\"}`}</button>\r\n          </div>\r\n        </article>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nfunction MedicationList(props) {\r\n  const medication = props.medication;\r\n\r\n  const morning = [];\r\n  const evening = [];\r\n  const afternoon = [];\r\n\r\n  medication.forEach((medication) => {\r\n    if (medication.afternoon === true) {\r\n      afternoon.push(medication);\r\n    }\r\n    if (medication.morning === true) {\r\n      morning.push(medication);\r\n    }\r\n    if (medication.evening === true) {\r\n      evening.push(medication);\r\n    }\r\n  });\r\n\r\n  // console.log(morning);\r\n  // console.log(afternoon);\r\n  // console.log(evening);\r\n\r\n  return (\r\n    <>\r\n      <SectionTitle />\r\n      <div className=\"time--wrapper\">\r\n        <section className=\"time--container\">\r\n          <header className=\"time--container-header\" id=\"morning\">\r\n            <div>\r\n              <h2>Morning</h2>\r\n            </div>\r\n            <div>\r\n              <img src={sunrise} alt=\"Logo\" />\r\n            </div>\r\n          </header>\r\n          <ul>\r\n            <MedicationBox list={morning} />\r\n          </ul>\r\n        </section>\r\n        <section className=\"time--container\">\r\n          <header className=\"time--container-header\" id=\"afternoon\">\r\n            <div>\r\n              <h2>Afternoon</h2>\r\n            </div>\r\n            <div>\r\n              <img src={sun} alt=\"Logo\" />\r\n            </div>\r\n          </header>\r\n          <ul>\r\n            <MedicationBox list={afternoon} />\r\n          </ul>\r\n        </section>\r\n        <section className=\"time--container\">\r\n          <header className=\"time--container-header\" id=\"evening\">\r\n            <div>\r\n              <h2>Evening</h2>\r\n            </div>\r\n            <div>\r\n              <img src={night} alt=\"Logo\" />\r\n            </div>\r\n          </header>\r\n          <ul>\r\n            <MedicationBox list={evening} />\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MedicationList;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":11,"column":10,"nodeType":"52","messageId":"53","endLine":11,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":14,"column":10,"nodeType":"52","messageId":"53","endLine":14,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":7,"column":18,"nodeType":"52","messageId":"53","endLine":7,"endColumn":27},{"ruleId":"50","severity":1,"message":"55","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":27,"column":10,"nodeType":"52","messageId":"53","endLine":27,"endColumn":19},{"ruleId":"50","severity":1,"message":"56","line":71,"column":9,"nodeType":"52","messageId":"53","endLine":71,"endColumn":34},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'submitted' is assigned a value but never used.","Identifier","unusedVar","'setValues' is assigned a value but never used.","'useState' is defined but never used.","'handleDurationInputChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]