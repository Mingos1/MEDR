[{"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js":"1","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js":"2","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js":"3","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js":"4","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js":"5","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js":"6","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js":"7","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js":"8","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js":"9"},{"size":2356,"mtime":1608092148474,"results":"10","hashOfConfig":"11"},{"size":1397,"mtime":1608094424985,"results":"12","hashOfConfig":"11"},{"size":2288,"mtime":1608251309874,"results":"13","hashOfConfig":"11"},{"size":2614,"mtime":1608095108945,"results":"14","hashOfConfig":"11"},{"size":2836,"mtime":1608532404775,"results":"15","hashOfConfig":"11"},{"size":4142,"mtime":1608441026943,"results":"16","hashOfConfig":"11"},{"size":1304,"mtime":1607394801817,"results":"17","hashOfConfig":"11"},{"size":7416,"mtime":1607395095156,"results":"18","hashOfConfig":"11"},{"size":8447,"mtime":1608544240325,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1k2yj51",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\index.js",[],["41","42"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\home\\home.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\login\\login.js",["43","44","45"],"import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Button,\r\n  Header,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  // Hooks\r\n  const [values, setValues] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const { email, password } = values;\r\n\r\n  // Handlers\r\n\r\n  const onChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setSubmitted(true);\r\n    const body = { email, password };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n      console.log(body);\r\n\r\n      if (parseRes.token !== undefined) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n      }\r\n\r\n      //setAuth(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form--wrapper login\" onSubmit={handleSubmit}>\r\n        <header>\r\n          <h2>Login</h2>\r\n        </header>\r\n\r\n        <FormControl id=\"email\">\r\n          <FormLabel for=\"email\">Email</FormLabel>\r\n          <Input\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            onChange={onChange}\r\n            value={email}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel for=\"password\">Password</FormLabel>\r\n          <Input\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onChange}\r\n            value={password}\r\n          />\r\n        </FormControl>\r\n        <div className=\"form-field--wrapper\">\r\n          <Button mt={4} colorScheme=\"pink\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\register\\register.js",["46","47"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\index.js",["48"],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\MedicationList.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\Navigation.js",[],"C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\EditMed.js",["49"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst EditMed = (props) => {\r\n  // console.log(props.medication);\r\n  const medication = props.medication;\r\n  Modal.setAppElement();\r\n\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    name: String,\r\n    dosage_size: Number,\r\n    dosage_unit: String,\r\n    dosage: Number,\r\n    type: String,\r\n    taken: Boolean,\r\n    duration: Number,\r\n    duration_unit: String,\r\n    morning: Boolean,\r\n    afternoon: Boolean,\r\n    evening: Boolean,\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const afterOpenModal = () => {\r\n    // references are now sync'd and can be accessed.\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Handlers\r\n  const handleMedicationInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      name: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageSizeInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_size: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage: event.target.value,\r\n    }));\r\n  };\r\n  const handleDosageUnitInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      dosage_unit: event.target.value,\r\n    }));\r\n  };\r\n\r\n  // const handleDurationInputChange = (event) => {\r\n  //   event.persist();\r\n  //   setValues((values) => ({\r\n  //     ...values,\r\n  //     duration: event.target.value,\r\n  //   }));\r\n  // };\r\n\r\n  const handleMorningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      morning: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAfternonCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      afternoon: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleEveningCheckChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      evening: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSubmitted(true);\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"edit-button\" id=\"modal-button\" onClick={openModal}>\r\n        <FontAwesomeIcon icon={faEllipsisV} />\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        className=\"modal--wrapper\"\r\n        overlayClassName=\"modal--overlay\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <header className=\"modal--header\">\r\n          <h2>Edit your med</h2>\r\n        </header>\r\n        <form onSubmit={handleSubmit}>\r\n          <section>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"medication-name\"\r\n                  placeholder={medication.name}\r\n                  onChange={handleMedicationInputChange}\r\n                  value={values.name}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Medication type</label>\r\n                <select\r\n                  id=\"medicationType\"\r\n                  name=\"type\"\r\n                  defaultValue={medication.type}\r\n                  onChange={``}\r\n                >\r\n                  <option value=\"pill\">Pill</option>\r\n                  <option value=\"caplet\">Caplet</option>\r\n                  <option value=\"tablet\">Tablet</option>\r\n                  <option value=\"shot\">Shot</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal--inline\">\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Times per day?</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosage\"\r\n                  placeholder={medication.dosage}\r\n                  onChange={handleDosageInputChange}\r\n                  value={values.dosage}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"\">Dosage</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dosageAmount\"\r\n                  onChange={handleDosageSizeInputChange}\r\n                  placeholder={medication.dosage_size}\r\n                  value={values.dosage_size}\r\n                />\r\n              </div>\r\n              <div className=\"modal--inline-item\">\r\n                <label for=\"dosageStrength\">Dosage Strength</label>\r\n                <select\r\n                  id=\"dosageStrength\"\r\n                  name=\"dosageStrength\"\r\n                  onChange={handleDosageUnitInputChange}\r\n                  defaultValue={medication.dosage_unit}\r\n                >\r\n                  <option value=\"mg\">milligram(mg)</option>\r\n                  <option value=\"g\">gram(g)</option>\r\n                  <option value=\"kg\">kilogram(kg)</option>\r\n                  <option value=\"mcg\">microgram(mcg)</option>\r\n                  <option value=\"L\">liter(L)</option>\r\n                  <option value=\"ml\">millilitre(ml)</option>\r\n                  <option value=\"cc\">cubic centimeter(cc)</option>\r\n                  <option value=\"m\">mole(mol)</option>\r\n                  <option value=\"mmol\">millimole(mmol)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <section className=\"modal--inline\">\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Morning</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={medication.morning ? true : false}\r\n                  onChange={handleMorningCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Afternoon</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={medication.afternoon ? true : false}\r\n                  onChange={handleAfternonCheckChange}\r\n                ></input>\r\n              </div>\r\n              <div class=\"switch modal--inline-item\">\r\n                <label>Evening</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleEveningCheckChange}\r\n                  defaultChecked={medication.evening ? true : false}\r\n                  value={``}\r\n                ></input>\r\n              </div>\r\n            </section>\r\n          </section>\r\n\r\n          <div class=\"modal--footer\">\r\n            <button type=\"submit\" className=\"save-button\">\r\n              Save changes\r\n            </button>\r\n            <button className=\"close-button\" onClick={closeModal}>\r\n              close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditMed;\r\n","C:\\Users\\mingo\\Documents\\coding\\reminder\\client\\src\\routes\\main\\components\\AddMed.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":6,"column":3,"nodeType":"57","messageId":"58","endLine":6,"endColumn":19},{"ruleId":"55","severity":1,"message":"59","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":9,"column":3,"nodeType":"57","messageId":"58","endLine":9,"endColumn":9},{"ruleId":"55","severity":1,"message":"56","line":6,"column":3,"nodeType":"57","messageId":"58","endLine":6,"endColumn":19},{"ruleId":"55","severity":1,"message":"59","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"61","line":90,"column":27},{"ruleId":"55","severity":1,"message":"62","line":27,"column":10,"nodeType":"57","messageId":"58","endLine":27,"endColumn":19},{"ruleId":"55","severity":1,"message":"62","line":29,"column":10,"nodeType":"57","messageId":"58","endLine":29,"endColumn":19},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'FormErrorMessage' is defined but never used.","Identifier","unusedVar","'FormHelperText' is defined but never used.","'Header' is defined but never used.","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  88 |         </Flex>\n  89 |         <Box margin={2}>\n> 90 |           <AddMed user_id={} />\n     |                           ^\n  91 |         </Box>\n  92 |         <Flex align=\"flex-end\" justifyContent=\"space-around\">\n  93 |           <Box margin={2}>","'submitted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]